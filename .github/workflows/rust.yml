name: Rust

on:
  push:
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always
  AUTO_TAG_NAME: ${{ github.ref_name }}_${{ github.sha }}
  EM_CONFIG: ${{ github.workspace }}/emscripten_config

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@main
    - uses: mymindstorm/setup-emsdk@v14
    - uses: actions/setup-node@v3
      with:
        node-version: '20.x'
    - name: install_dependencies
      run: |
            sudo add-apt-repository -y "deb http://archive.ubuntu.com/ubuntu `lsb_release -sc` main universe restricted multiverse"
            sudo apt-get update -y -qq
            sudo apt-get install libsdl2-dev binaryen llvm lld
            rustup target add asmjs-unknown-emscripten
    - name: install_windows_cross_compiler
      run: |
            sudo apt-get install gcc-mingw-w64
            rustup target add x86_64-pc-windows-gnu
            sudo apt-get install libsdl2-dev -y
            mkdir ../sdl_mingw
            curl -s https://www.libsdl.org/release/SDL2-devel-2.0.22-mingw.tar.gz  | tar xvz -C ../sdl_mingw
            cp -r ../sdl_mingw/SDL2-2.0.22/x86_64-w64-mingw32/lib/* ~/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-pc-windows-gnu/lib/

    - name: Build native
      run: cargo build --release --verbose --config projects/native/.cargo/config.toml
    - name: Build windows
      run: cargo build --target x86_64-pc-windows-gnu --release
    - name: Build javascript
      run: |
           emsdk install latest
           emsdk activate latest
           source emsdk_env.sh
           cargo build --release --verbose --config projects/emscripten/.cargo/config.toml
    - name: Artifact generation - Windows
      uses: actions/upload-artifact@v4
      with:
        name: windows_artifact_${{ env.AUTO_TAG_NAME }}
        path: |
              target/x86_64-pc-windows-gnu/release/rusted_atari2600.exe
    - name: Artifact generation
      uses: actions/upload-artifact@v4
      with:
        name: emscripten_artifact_${{ env.AUTO_TAG_NAME }}
        path: |
              index.html
              file_drop.js
              run_sample_server.sh
              target/**/rusted_atari2600.js

    - name: Create release zip
      run: |
           cd ..
           zip -r emscripten_artifact_${{ env.AUTO_TAG_NAME }}.zip rusted_atari2600/index.html rusted_atari2600/file_drop.js rusted_atari2600/run_sample_server.sh rusted_atari2600/target/asmjs-unknown-emscripten/release/rusted_atari2600.js

    - name: release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: true
        prerelease: true
        release_name: ${{ github.ref_name }}
        tag_name: ${{ env.AUTO_TAG_NAME }}
        body: |
              Change Log
              - Trying to create a release via an action.
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: upload emscripten artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ../emscripten_artifact_${{ env.AUTO_TAG_NAME }}.zip
        asset_name: emscripten_artifact_${{ env.AUTO_TAG_NAME }}.zip
        asset_content_type: application/zip
